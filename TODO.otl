TODO
	Data
		Depedency injection of configuration
			configuration
				where each of the source or documentation files are located
		Open tarballs/ZIP archives in memory
			VFS
				libarchive
		Source files
			detect changes
				method
					using checksums
					using Git index
				serialise the results
		Code model
			inheritance
			use compression for data structures?
	Formats
		parse groff
			parse mandoc
		parse C comments
	Queries
		function
			function arguments
			comment
			return type
		type
			type definition
			where are types used
			subtypes
	Projects can have multiple contexts
		e.g., with multiple languages
		OS environment also provides context
		perhaps the ability to switch out contexts is important too
			different versions of compiler, interpreter
			understand rvm, perlbrew, etc.
	When handling types in C, we need to understand how typedefs are equivalent
		but the types should remain as they are and not substituted
		partial C preprocessor : do not expand system libraries (and #defines that are from the system)

